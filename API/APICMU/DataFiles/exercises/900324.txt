# (1) Click on the first test case.
# (2) Notice how the number of wins increases by 1 when the home team won.
# (3) Now click on the second test case.
# (4) Notice how for each of the four games, the number of wins increases by 1
#     when the home team won and the number of losses increases by 1 when the
#     home team lost.
# That's it, let's code!

Rect(0, 0, 400, 400, fill='cornflowerblue')

# time section
Rect(50, 0, 300, 100)
Rect(35, 0, 330, 115, fill=None, border='white', borderWidth=5)
Rect(165, 150, 70, 30, fill='cornflowerblue')
Label('TIME', 200, 130, size=20, fill='white')
Label('00:00', 200, 50, fill='goldenrod', size=80, font='monospace',
                 bold=True)

# home section
Label('HOME', 100, 160, fill='white', size=60, font='monospace', bold=True)
Rect(25, 190, 150, 100)
homeLabel = Label(0, 100, 240, fill='red', size=100, font='monospace', bold=True)

# away section
Label('AWAY', 300, 160, fill='white', size=60, font='monospace', bold=True)
Rect(225, 190, 150, 100)
awayLabel = Label(0, 300, 240, fill='red', size=100, font='monospace', bold=True)

# wins
Label('WINS', 100, 320, fill='white', size=40, font='monospace', bold=True)
Rect(25, 340, 150, 40)
wins = Label(0, 100, 360, fill='red', size=50, font='monospace', bold=True)

# losses
Label('LOSSES', 300, 320, fill='white', size=40, font='monospace', bold=True)
Rect(225, 340, 150, 40)
losses = Label(0, 300, 360, fill='red', size=50, font='monospace', bold=True)

def finalScoreboard(homeScore, awayScore):
    # Display the final scores
    ### (HINT: You'll need to use the homeLabel, and awayLabel variables
    #          defined above)
    ### Place Your Code Here ###

    # Update the number of wins and losses (ties wont be tested by autograder)
    ### Place Your Code Here ###
    pass