10001#Using if|MainHeading
100011#We will now learn how to use a conditional statement -- also called an if statement -- to run code only if some test (or condition) is true. For example, say that when the user presses the mouse, we want to draw a circle, but only if the press is on the left half of the canvas. That is, only if (mouseX < 200). Here is the code for that:|Paragraph
340001#def onMousePress(mouseX, mouseY):|InlineContainer
100011#Run the code, click a few times on the left and on the right, and confirm that it works as noted. While it works, we can make it easier to use by adding a title, a brief explanation, and in this case, a helpful vertical line to separate the left and right sides. Here is the result:|Paragraph
340002#Label('Using "if" Demo', 200, 20, size=20, bold=True)|InlineContainer
320001#That's better! Let's take a closer look at how this works. When the mouse is pressed, Python calls onMousePress, and then runs this line:|Paragraph
34444#if (mouseX < 200): |Box
34444#Here, Python tests if mouseX is less than 200. If and only if that test is true, Python runs the indented code after it:|Paragraph
end
10001#onMouseDrag|MainHeading
100011#WWe just saw onMouseMove is only called if the mouse is not pressed. If the mouse is pressed and held, instead of onMouseMove, CMU Graphics calls onMouseDrag. Let's change the previous example to use onMouseDrag:|Paragraph
330001#Label('Mouse Drag Demo', 200, 20, size=20, bold=True)|InlineContainer
330001#mcq|CheckPoint
100011#Let's see another example that uses both onMouseMove and onMouseDrag:|Paragraph
330004#Label('Mouse Move and Drag Demo', 200, 20, size=20, bold=True)|InlineContainer
330005#mcq|CheckPoint
end